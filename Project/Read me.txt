Before running the project please follow the following instructions to set up the system

1. Install the latest version of Wamp from http://www.wampserver.com/en/ (contains  PHP 5.3 or above Apache server, MySQL as a package)

2. Our project uses Google Matrix API that uses widop/http-adapter which is a PHP 5.3 library for issuing http requests.

3. To install the Wid'op http adapter library, you will need Composer. It's a PHP 5.3+ dependency manager which allows you to declare the dependent libraries your project needs and it will install & autoload them for you.

4. Set up Composer
Composer comes with a simple phar file. Make sure that you install composer in the root directory of php

5. To install composer execute the following commands
$ curl -s https://getcomposer.org/installer | php
$ sudo mv composer.phar /usr/local/bin/composer

6. For more information about downloading composer visit 
https://getcomposer.org/download/

7. create a file called composer.json in the root directory with the following contents
{
    "require": {
        "widop/http-adapter": "*"
    }
}

8. To define the dependencies use the command $ composer install. All the above steps are done in the php root directory

9. Composer will automatically download your dependencies & create an autoload file in the vendor directory.


To run the project:

1.	In the www folder of wamp directory unzip the folder called src2 (wamp/www/src2). The files under this folder contains code for Google Matrix API
2.	Place the following files in the wamp/www
		deterministicGrav.php
		deterministicGreedy.php
		probabilisticGrav.php
		probabilisticGreedy.php
3.	Start wamp server
4.	Create the database called parking database in phpmyadmin and create the tables.
5.	Place the dbinfo.inc file in the root directory (wamp/www)
6.	If you are running the files in localhost the url to run each of the file looks like this
		http://localhost/deterministicGrav.php
		http://localhost/deterministicGreedy.php
		http://localhost/probabilisticGrav.php
		http://localhost/probabilisticGreedy.php
7.	Enter values for all dropdown menu and click simulate
8.	A map will be projected and the path to reach the destination node will be projected with the path to reach it.
9.	Distance and time required to travel to the destination is also projected with the intermediate hops.
